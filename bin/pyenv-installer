#!/usr/bin/env bash

set -e
[ -n "$PYENV_DEBUG" ] && set -x

if [ -z "$PYENV_ROOT" ]; then
  export PYENV_ROOT="${HOME}/.pyenv"
fi

if [ -z "$shell" ]; then
  shell="$(ps -p "$PPID" -o 'args=' 2>/dev/null || true)"
  shell="${shell%% *}"
  shell="${shell##-}"
  shell="${shell:-$SHELL}"
  shell="${shell##*/}"
  shell="${shell%%-*}"
fi

USER_PATH_ADDED=false

colorize() {
  if [ -t 1 ]; then printf "\e[%sm%s\e[m" "$1" "$2"
  else echo -n "$2"
  fi
}

# Checks for `.pyenv` file, and suggests to remove it for installing
if [ -d "${PYENV_ROOT}" ]; then
  { echo
    colorize 1 "WARNING"
    echo ": Can not proceed with installation. Kindly remove the '${PYENV_ROOT}' directory first."
    echo
  } >&2
    exit 1
fi

failed_checkout() {
  echo "Failed to git clone $1"
  exit -1
}

checkout() {
  [ -d "$2" ] || git -c advice.detachedHead=0 clone --branch "$3" --depth 1 "$1" "$2" || failed_checkout "$1"
}

if ! command -v git 1>/dev/null 2>&1; then
  echo "pyenv: Git is not installed, can't continue." >&2
  exit 1
fi

if [ -n "${USE_GIT_URI}" ]; then
  GITHUB="git://github.com"
else
  GITHUB="https://github.com"
fi

checkout "${GITHUB}/pyenv/pyenv.git"            "${PYENV_ROOT}"                           "${PYENV_GIT_TAG:-master}"
checkout "${GITHUB}/pyenv/pyenv-doctor.git"     "${PYENV_ROOT}/plugins/pyenv-doctor"      "master"
checkout "${GITHUB}/pyenv/pyenv-installer.git"  "${PYENV_ROOT}/plugins/pyenv-installer"   "master"
checkout "${GITHUB}/pyenv/pyenv-update.git"     "${PYENV_ROOT}/plugins/pyenv-update"      "master"
checkout "${GITHUB}/pyenv/pyenv-virtualenv.git" "${PYENV_ROOT}/plugins/pyenv-virtualenv"  "master"
checkout "${GITHUB}/pyenv/pyenv-which-ext.git"  "${PYENV_ROOT}/plugins/pyenv-which-ext"   "master"

write_source() {
  # expand ~ to user's home
  local target="${1/#\~/$HOME}"

  echo "Update file: $1" >&2

  echo "" >>$target
  echo '# pyenv' >>$target
  echo 'export PATH="'"$PYENV_ROOT/bin:"'$PATH"' >>$target
  echo 'eval "$(pyenv init -)"' >>$target
  echo 'eval "$(pyenv virtualenv-init -)"' >>$target

  USER_PATH_ADDED=true
}

add_userpath() {
  # Will detect rc files by setting variables below:
  # PYENV_SHELL_DETECT
  # PYENV_PROFILE_DETECT
  # PYENV_RC_DETECT
  eval "$(${PYENV_ROOT}/bin/pyenv init --detect-shell $shell)"

  case "$PYENV_SHELL_DETECT" in
  bash )
    write_source $PYENV_PROFILE_DETECT
    write_source $PYENV_RC_DETECT
    ;;
  zsh )
    write_source $PYENV_PROFILE_DETECT
    write_source $PYENV_RC_DETECT
    ;;
  ksh )
    write_source $PYENV_PROFILE_DETECT
    ;;
  * )
    {
      echo "Add userpath for $PYENV_SHELL_DETECT is not currently supported"
      echo "Please set up manually"
    } >&2
    ;;
  esac
}

if ! command -v pyenv 1>/dev/null; then

  add_userpath
  if ${USER_PATH_ADDED}; then
    echo "Restart your shell to start using pyenv" >&2
    exit 0
  fi

  { echo
    colorize 1 "WARNING"
    echo ": seems you still have not added 'pyenv' to the load path."
    echo
  } >&2

  { # Without args, `init` commands print installation help
    "${PYENV_ROOT}/bin/pyenv" init || true
    "${PYENV_ROOT}/bin/pyenv" virtualenv-init || true
  } >&2
fi
