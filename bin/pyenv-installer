#!/usr/bin/env bash

set -e
[ -n "$PYENV_DEBUG" ] && set -x

if [ -z "$PYENV_ROOT" ]; then
  export PYENV_ROOT="${HOME}/.pyenv"
fi

SRC_WRITTEN=false

colorize() {
  if [ -t 1 ]; then printf "\e[%sm%s\e[m" "$1" "$2"
  else echo -n "$2"
  fi
}

# Checks for `.pyenv` file, and suggests to remove it for installing
if [ -d "${PYENV_ROOT}" ]; then
  { echo
    colorize 1 "WARNING"
    echo ": Can not proceed with installation. Kindly remove the '${PYENV_ROOT}' directory first."
    echo
  } >&2
    exit 1
fi

failed_checkout() {
  echo "Failed to git clone $1"
  exit -1
}

checkout() {
  [ -d "$2" ] || git -c advice.detachedHead=0 clone --branch "$3" --depth 1 "$1" "$2" || failed_checkout "$1"
}

if ! command -v git 1>/dev/null 2>&1; then
  echo "pyenv: Git is not installed, can't continue." >&2
  exit 1
fi

if [ -n "${USE_GIT_URI}" ]; then
  GITHUB="git://github.com"
else
  GITHUB="https://github.com"
fi

checkout "${GITHUB}/pyenv/pyenv.git"            "${PYENV_ROOT}"                           "${PYENV_GIT_TAG:-master}"
checkout "${GITHUB}/pyenv/pyenv-doctor.git"     "${PYENV_ROOT}/plugins/pyenv-doctor"      "master"
checkout "${GITHUB}/pyenv/pyenv-installer.git"  "${PYENV_ROOT}/plugins/pyenv-installer"   "master"
checkout "${GITHUB}/pyenv/pyenv-update.git"     "${PYENV_ROOT}/plugins/pyenv-update"      "master"
checkout "${GITHUB}/pyenv/pyenv-virtualenv.git" "${PYENV_ROOT}/plugins/pyenv-virtualenv"  "master"
checkout "${GITHUB}/pyenv/pyenv-which-ext.git"  "${PYENV_ROOT}/plugins/pyenv-which-ext"   "master"

write_source() {
  {
    echo "Appending the following lines to $1:"
    echo '  # pyenv'
    echo '  export PATH="'"$PYENV_ROOT/bin:"'$PATH"'
    echo '  eval "$(pyenv init --path)"'
    echo '  eval "$(pyenv virtualenv-init -)"'
    echo ''
  } >&2

  echo "" >>$1
  echo '# pyenv' >>$1
  echo 'export PATH="'"$PYENV_ROOT/bin:"'$PATH"' >>$1
  echo 'eval "$(pyenv init --path)"' >>$1
  echo 'eval "$(pyenv virtualenv-init -)"' >>$1

  SRC_WRITTEN=true
}

add_userpath() {
  OS="$(uname -s)"
  CURRENT_SHELL="$(basename "$SHELL")"

  if [[ "$OS" = "Darwin" ]]; then
    if [[ "$CURRENT_SHELL" = "zsh" ]]; then
      write_source "$HOME/.zprofile"
    elif [[ "$CURRENT_SHELL" = "bash" ]]; then
      write_source "$HOME/.bash_profile"
    fi

  elif [[ "$CURRENT_SHELL" = "zsh" ]]; then
    # write to first match: zshrc/zprofile
    if [[ -f $HOME/.zshrc ]]; then
      write_source "$HOME/.zshrc"
    elif [[ -f $HOME/.zprofile ]]; then
      write_source "$HOME/.zprofile"
    fi

  elif [[ "$CURRENT_SHELL" = "bash" ]]; then
    # bashrc
    write_source "$HOME/.bashrc"

    # write to first match: profile/bash_profile
    if [[ -f $HOME/.profile ]]; then
      write_source "$HOME/.profile"
    elif [[ -f $HOME/.bash_profile ]]; then
      write_source "$HOME/.bash_profile"
    fi

  else
    {
      echo "Add userpath for $CURRENT_SHELL is not currently supported"
      echo "Please set up manually"
    } >&2
  fi
}

if ! command -v pyenv 1>/dev/null; then
  add_userpath

  if ${SRC_WRITTEN}; then
    echo "Close and reopen your terminal to start using pyenv" >&2
  else
    { echo
      colorize 1 "WARNING"
      echo ": seems you still have not added 'pyenv' to the load path."
      echo
    } >&2

    { # Without args, `init` commands print installation help
      "${PYENV_ROOT}/bin/pyenv" init || true
      "${PYENV_ROOT}/bin/pyenv" virtualenv-init || true
    } >&2
  fi
fi
